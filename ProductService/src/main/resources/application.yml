
server:
  port: 8082


# MySQL DB configuration

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/products_db
    username: root
    password: jaiganeshji
    driver-class-name: com.mysql.cj.jdbc.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate: org.hibernate.dialect.MySQL8Dialect





  # Kafka Configuration for integration with Spring Boot

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  #    consumer:
  #      bootstrap-servers: localhost:9092
  #      group-id: myGroup
  #      auto-offset-reset: earliest
  #      #key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #      #value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  #      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
  #      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
  #
  #
  #      properties:
  #        spring.json.trusted.packages: '*'
  #
  #
  #        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
  #        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer



  ## ErrorHandlingDeserializer for both key and value deserializers. This handles deserialization errors.
  ## The delegate deserializers are set to StringDeserializer for key and JsonDeserializer for value. These perform the actual deserialization.





  application:
    name: PRODUCT-SERVICE




# Eureka Registry Client configuration

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka



